{
  "$schema": "http://json-schema.org/schema",
  "name": "scaffold",
  "version": "0.0.1",
  "generators": {
    "infrastructure": {
      "factory": "./src/generators/infrastructure/generator",
      "schema": "./src/generators/infrastructure/schema.json",
      "description": "Creates an infrastructure library"
    },
    "apiClient": {
      "factory": "./src/generators/api-client/generator",
      "schema": "./src/generators/api-client/schema.json",
      "description": "Create an api client to be consumed by a front-end"
    },
    "controller": {
      "factory": "./src/generators/controller/generator",
      "schema": "./src/generators/controller/schema.json",
      "description": "Creates a controller"
    },
    "repository": {
      "factory": "./src/generators/repository/generator",
      "schema": "./src/generators/repository/schema.json",
      "description": "Creates a repository using the prisma client"
    },
    "domain-entity": {
      "factory": "./src/generators/domain-entity/generator",
      "schema": "./src/generators/domain-entity/schema.json",
      "description": "Creates model, repo and api interfaces"
    },
    "domain-lib": {
      "factory": "./src/generators/domain-lib/generator",
      "schema": "./src/generators/domain-lib/schema.json",
      "description": "Creates a domain library"
    },
    "data-access": {
      "factory": "./src/generators/data-access/generator",
      "schema": "./src/generators/data-access/schema.json",
      "description": "Creates a data-access library"
    },
    "domain": {
      "factory": "./src/generators/domain/generator",
      "schema": "./src/generators/domain/schema.json",
      "description": "Creates a new set of libraries for a domain. Example: libs/todo â€” todo would be the domain with multiple libraries being created inside the directory."
    }
  }
}
